var path=require("path"),db=require("../../models");const moment=require("moment");var isAuthenticated=require("../../config/middleware/isAuthenticated");const bmi=require("../../models/bmi");module.exports=function(a){a.get("/",function(a,b){b.render("index")}),a.get("/signup",function(a,b){a.user&&b.render("index"),b.render("signup")}),a.get("/login",function(a,b){a.user?b.redirect("/"):b.render("login")}),a.get("/BMI",isAuthenticated,function(a,b){db.Bmi.findAll({where:{email:a.user.email}}).then(a=>{let c=a.map(a=>a.dataValues);b.render("BMI",{bmis:c})})}),a.get("/goals",isAuthenticated,function(a,b){db.Goal.findAll({where:{email:a.user.email},raw:!0}).then(function(a){const c={};c.goals=a.map(a=>({...a,time:moment(a.createdAt).format("h:mm A"),date:moment(a.createdAt).format("MM/DD/YYYY")})),b.render("goalsTrack",c)}).catch(function(){})}),a.get("/workout",isAuthenticated,function(a,b){db.Workout.findAll({where:{email:a.user.email}}).then(a=>{let c=a.map(a=>a.dataValues);b.render("workout",{workouts:c})})}),a.get("/profile",isAuthenticated,function(a,b){b.render("profile")}),a.get("/workoutBodyweight",isAuthenticated,function(a,b){db.Workout.findAll({where:{email:a.user.email,workout_type:"Bodyweight"}}).then(a=>{let c=a.map(a=>a.dataValues);b.render("workoutBodyweight",{workouts:c})})}),a.get("/workoutCardio",isAuthenticated,function(a,b){db.Workout.findAll({where:{email:a.user.email,workout_type:"Cardio"}}).then(a=>{let c=a.map(a=>a.dataValues);b.render("workoutCardio",{workouts:c})})}),a.get("/workoutWeightlifting",isAuthenticated,function(a,b){db.Workout.findAll({where:{email:a.user.email,workout_type:"Weightlifting"}}).then(a=>{let c=a.map(a=>a.dataValues);b.render("workoutWeightlifting",{workouts:c})})})};